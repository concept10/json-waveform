#!/usr/bin/env ruby
require "json-waveform"
require "json"
require "optparse"

options = JsonWaveform::DEFAULT_OPTIONS
optparse = OptionParser.new do |o|
  o.banner = "Usage: json-waveform [options] source_audio [output]"
  o.version = JsonWaveform::VERSION

  o.on("-s", "--samples SAMPLES", "Samples generated from the original file (i.e.: waveform width) -- Default #{JsonWaveform::DEFAULT_OPTIONS[:samples]}.") do |samples|
    options[:samples] = samples.to_i
  end

  o.on("-A", "--amplitude AMPLITUDE", "Max amplitude of the waveform values-- Default #{JsonWaveform::DEFAULT_OPTIONS[:amplitude]}.") do |amplitude|
    options[:amplitude] = amplitude.to_i
  end

  o.on("-a", "--autosample MSEC", "Sets the width of the waveform based on the audio length, using a resolution of the given msec per sample.") do |msec|
    options[:auto_sample] = msec.to_i
  end

  o.on("-m", "--method METHOD", "Wave analyzation method (can be 'peak' or 'rms') -- Default '#{JsonWaveform::DEFAULT_OPTIONS[:method]}'.") do |method|
    options[:method] = method.to_sym
  end

  o.on("-h", "--help", "Display this screen") do
    puts o
    exit
  end
end

optparse.parse!

begin
  result = JSON.dump(JsonWaveform.generate(ARGV[0], options))
  if ARGV[1]
    File.open(ARGV[1], 'w') do |file|
      file.write result
    end
  else
    puts result
  end
rescue JsonWaveform::ArgumentError => e
  puts e.message + "\n\n"
  puts optparse
rescue JsonWaveform::RuntimeError => e
  puts e.message
end

